{"version":3,"sources":["styles.js","index.js","App.js"],"names":["Main","styled","body","InitiativeTable","table","ActionButton","button","ReactDOM","render","useState","characters","setCharacters","newCharacter","setNewCharacter","idList","setIdList","generateId","id","Math","floor","random","Number","MAX_SAFE_INTEGER","includes","push","className","map","character","key","name","init","ac","onClick","arrayCopy","filter","row","RemoveCharacter","type","value","placeholder","onChange","e","target","slice","sort","a","b","SortCharactersByInit","document","getElementById"],"mappings":"uwCAEO,IAAMA,EAAOC,IAAOC,KAAV,KAOJC,EAAkBF,IAAOG,MAAV,KAwCfC,EAAeJ,IAAOK,OAAV,KC7CzBC,IAASC,OAAO,mBCDD,WAAgB,IAAD,EACQC,mBAAS,IADjB,mBACrBC,EADqB,KACTC,EADS,OAEYF,mBAAS,IAFrB,mBAErBG,EAFqB,KAEPC,EAFO,OAGAJ,mBAAS,IAHT,mBAGrBK,EAHqB,KAGbC,EAHa,KAqB5B,SAASC,IAGP,IAFA,IAAIC,EAAKC,KAAKC,MAAMD,KAAKE,SAAWC,OAAOC,kBAEpCR,EAAOS,SAASN,IACrBA,EAAKC,KAAKC,MAAMD,KAAKE,SAAWC,OAAOC,kBAKzC,OAFAR,EAAOU,KAAKP,GACZF,EAAUD,GACHG,EAGT,OACE,kBAACjB,EAAD,KACE,kBAACG,EAAD,KAEE,+BACE,wBAAIsB,UAAU,UACZ,oCACA,oCACA,oCAIJ,+BACCf,EAAWgB,KAAI,SAAAC,GAAS,OACrB,wBAAIC,IAAKD,EAAUV,GAAIQ,UAAU,YAC/B,4BAAKE,EAAUE,MACf,4BAAKF,EAAUG,MACf,4BAAKH,EAAUI,IACf,4BACE,4BAAQC,QAAS,kBA/C/B,SAA0Bf,GACxB,IAAMgB,EAAYvB,EAAWwB,QAAO,SAACC,GAAD,OAASA,EAAIlB,KAAOA,KACxDN,EAAcsB,GA6CqBG,CAAgBT,EAAUV,MAAjD,gBAMR,+BACE,4BACE,4BAAI,2BAAOoB,KAAK,OAAOC,MAAO1B,EAAaiB,KAAMU,YAAY,OAAOC,SAAU,SAAAC,GAAC,OAAI5B,EAAgB,eAAKD,EAAN,CAAoBiB,KAAMY,EAAEC,OAAOJ,aACrI,4BAAI,2BAAOD,KAAK,OAAOC,MAAO1B,EAAakB,KAAMS,YAAY,OAAOC,SAAU,SAAAC,GAAC,OAAI5B,EAAgB,eAAKD,EAAN,CAAoBkB,KAAMW,EAAEC,OAAOJ,aACrI,4BAAI,2BAAOD,KAAK,OAAOC,MAAO1B,EAAamB,GAAIQ,YAAY,KAAKC,SAAU,SAAAC,GAAC,OAAI5B,EAAgB,eAAKD,EAAN,CAAoBmB,GAAIU,EAAEC,OAAOJ,aAC/H,4BAAI,4BAAQD,KAAK,SAASL,QArDpC,WACErB,EAAc,GAAD,mBAAKD,GAAL,CAAiBE,KAC9BC,EAAgB,CAACgB,KAAM,GAAIC,KAAM,GAAIC,GAAI,GAAId,GAAID,QAmDrC,WAMV,6BACE,kBAACX,EAAD,CAAcgC,KAAK,SAASL,QAAS,kBAvD3C,SAA+BtB,GAC7B,IAAMuB,EAAYvB,EAAWiC,MAAM,GACnCV,EAAUW,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAEhB,KAAOe,EAAEf,QACnCnB,EAAcsB,GAoDiCc,CAAqBrC,KAAhE,QACA,kBAACL,EAAD,aACA,kBAACA,EAAD,iBDvEQ,MAAS2C,SAASC,eAAe,W","file":"static/js/main.9b1dbe34.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Main = styled.body`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    text-align: center;\n`;\n\nexport const InitiativeTable = styled.table`\n\n    thead>tr>th {\n        background-color: black;\n        color: white;\n        padding: 1% 0%;\n        width: 30%;\n    }\n\n    tbody>tr:nth-child(even) {\n        background-color: #f2f2f2;\n    }\n\n    tbody>tr:hover {\n        background-color: #f5f5fF;\n    }\n\n    tbody>tr>td {\n        padding: 0.5%;\n    }\n\n    tfoot>tr>td {\n        padding: 1%;\n        width: 30%;\n    }\n\n    tfoot>tr>td>input {\n        width: 80%;\n        padding: 2%;\n        border-radius: 0;\n    }\n\n    td>button {\n        background-color: black;\n        color: white;\n        width: 100%;\n        padding: 10%\n    }\n`;\n\nexport const ActionButton = styled.button`\n    width: 25%;\n    padding: 1%;\n    background-color: black;\n    color: white;\n    font-size: 75%;\n`;","import ReactDOM from 'react-dom';\nimport App from './App';\nimport React from 'react'\n\nReactDOM.render(<App />, document.getElementById('root'));","import React, {useState} from 'react';\nimport { Main, ActionButton, InitiativeTable } from './styles';\n\nexport default function App() {\n  const [characters, setCharacters] = useState([]);\n  const [newCharacter, setNewCharacter] = useState('');\n  const [idList, setIdList] = useState([]);  \n\n  function RemoveCharacter (id) {\n    const arrayCopy = characters.filter((row) => row.id !== id);\n    setCharacters(arrayCopy);\n  }\n  \n  function handleAdd () {\n    setCharacters([...characters, newCharacter])\n    setNewCharacter({name: '', init: '', ac: '', id: generateId()})\n  }\n\n  function SortCharactersByInit (characters) {\n    const arrayCopy = characters.slice(0);\n    arrayCopy.sort((a,b) => b.init - a.init);\n    setCharacters(arrayCopy)\n  }\n\n  function generateId() {\n    let id = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER)\n\n    while (idList.includes(id)) {\n      id = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER)\n    }\n\n    idList.push(id)\n    setIdList(idList)\n    return id;\n  }\n\n  return (\n    <Main>\n      <InitiativeTable>\n\n        <thead>\n          <tr className='header'>\n            <th>Name</th>\n            <th>Init</th>\n            <th>AC</th>\n          </tr>\n        </thead>\n\n        <tbody>\n        {characters.map(character => (\n            <tr key={character.id} className='contents'>\n              <td>{character.name}</td>\n              <td>{character.init}</td>\n              <td>{character.ac}</td>\n              <td>\n                <button onClick={() => RemoveCharacter(character.id)} >remove</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n\n        <tfoot>\n          <tr>\n            <td><input type=\"text\" value={newCharacter.name} placeholder=\"name\" onChange={e => setNewCharacter({ ...newCharacter, name: e.target.value})}/></td>\n            <td><input type=\"text\" value={newCharacter.init} placeholder=\"init\" onChange={e => setNewCharacter({ ...newCharacter, init: e.target.value})}/></td>\n            <td><input type=\"text\" value={newCharacter.ac} placeholder=\"ac\" onChange={e => setNewCharacter({ ...newCharacter, ac: e.target.value})}/></td>\n            <td><button type='button' onClick={handleAdd}>Add</button></td>\n          </tr>\n        </tfoot>\n\n      </InitiativeTable>\n     \n      <div>\n        <ActionButton type='button' onClick={() => SortCharactersByInit(characters)}>Sort</ActionButton>\n        <ActionButton>save</ActionButton>\n        <ActionButton>save</ActionButton>\n      </div>\n\n    </Main>\n  );\n}\n\n"],"sourceRoot":""}